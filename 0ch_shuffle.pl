#============================================================================================================
#
#	拡張機能 - 文字列シャッフルコマンド
#	0ch_shuffle.pl
#
#============================================================================================================
package ZPL_shuffle;
use List::Util;
use Encode 'decode';
use Encode 'encode';


#------------------------------------------------------------------------------------------------------------
#	拡張機能名称取得
#------------------------------------------------------------------------------------------------------------
sub getName
{
	return '文字列シャッフルコマンド';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能説明取得
#------------------------------------------------------------------------------------------------------------
sub getExplanation
{
	return '14ch(PHP版)にあった日本語がバグらない(絵文字がバグらないとは言っていない)文字列シャッフルコマンドを0ch+に実装します。';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能タイプ取得
#------------------------------------------------------------------------------------------------------------
sub getType
{
	return (1|2);
}

#------------------------------------------------------------------------------------------------------------
#	設定リスト取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub getConfig
{
	return {};
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能実行インタフェイス
#------------------------------------------------------------------------------------------------------------
sub execute
{
	my $this = shift;
	my ($Sys, $Form, $type) = @_;
	
	# 0ch本家では実行しない
	return 0 if (!$this->{'is0ch+'});
	
	my $CGI = $Sys->Get('MainCGI');
	my $MESSAGE = $Form->Get('MESSAGE');

	# <shuffle> がなければ終了
	if ($MESSAGE !~ m{&lt;shuffle&gt;}i) {
		return 0;
	}

	# <shuffle>hogehoge</shuffle> 処理部
	$MESSAGE =~ s{&lt;shuffle&gt;(.+?)&lt;/shuffle&gt;}{do {
		my $expr = $1;			# <shuffle>で囲まれた部分 = シャッフル対象
		my $expr = encode('Shift-JIS',join("", List::Util::shuffle(split //, decode('Shift-JIS', $expr))));		# シャッフル
		"$expr <br> <small><span style=\"color: red;\">シャッフル 原文→</span><span style=\"background-color: #CECECE; color: red;\" onClick=\"this.innerText='「$1」'\">クリックして表\示</span></small>";	# <shuffle>指定部分がこれに置き換わる
		# $&;					# 置換しない場合はこれをコメント解除
	}}egi;
	
	$Form->Set('MESSAGE', $MESSAGE);
	return 0;
}

#------------------------------------------------------------------------------------------------------------
#	コンストラクタ
#------------------------------------------------------------------------------------------------------------
sub new
{
	my $class = shift;
	my ($Config) = @_;
	
	my $this = {};
	bless $this, $class;
	
	if (defined $Config) {
		$this->{'PLUGINCONF'} = $Config;
		$this->{'is0ch+'} = 1;
	}
	else {
		$this->{'CONFIG'} = $class->getConfig();
		$this->{'is0ch+'} = 0;
	}
	
	return $this;
}

#------------------------------------------------------------------------------------------------------------
#	設定値取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub GetConf
{
	my $this = shift;
	my ($key) = @_;
	if ($this->{'is0ch+'}) {
		return $this->{'PLUGINCONF'}->GetConfig($key);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		return $this->{'CONFIG'}->{$key}->{'default'};
	}
}

#------------------------------------------------------------------------------------------------------------
#	設定値設定 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub SetConf
{
	my $this = shift;
	my ($key, $val) = @_;
	if ($this->{'is0ch+'}) {
		$this->{'PLUGINCONF'}->SetConfig($key, $val);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		$this->{'CONFIG'}->{$key}->{'default'} = $val;
	}
	else {
		$this->{'CONFIG'}->{$key} = { 'default' => $val };
	}
}

#============================================================================================================
#	Module END
#============================================================================================================
1;